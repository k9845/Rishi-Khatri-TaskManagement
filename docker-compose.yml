version: '3.5'

x-server: &base_server_setup
  image: task-management-system:latest
  build: .
  # To attach to container with stdin `docker attach <container_name>`
  # Used for python debugging.
  stdin_open: true
  tty: true
  environment:
    # Overwrite this using .env (for additional configuration, look at main/settings.py:env
    # Database (from db.environment)
    DJANGO_DB_HOST: ${DJANGO_DB_HOST:-db}
    DJANGO_DB_NAME: ${DJANGO_DB_NAME:-postgres}
    DJANGO_DB_USER: ${DJANGO_DB_USER:-postgres}
    DJANGO_DB_PASS: ${DJANGO_DB_PASS:-postgres}
    # Other development defaults configs
    DJANGO_DEBUG: ${DJANGO_DEBUG:-true}
  env_file:
    - .env
  volumes:
    - .:/code
  depends_on:
    - db

services:
  db:
    image: postgis/postgis:13-3.1-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    <<: *base_server_setup
    ports:
      - "8000:8000"
    command: bash -c "/code/scripts/run_develop.sh"